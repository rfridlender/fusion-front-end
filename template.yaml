AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Parameters:
  FrontEndName:
    Type: String
  BackEndName:
    Type: String
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - prod
      - dev

Conditions:
  IsProd:
    Fn::Equals:
      - !Ref Environment
      - prod

Resources:
  # Amplify
  Branch:
    Type: AWS::Amplify::Branch
    Properties:
      BranchName: !If [IsProd, main, dev]
      AppId: 
        Fn::ImportValue: !Sub ${FrontEndName}-app-id
      Stage: !If [IsProd, PRODUCTION, DEVELOPMENT]
      EnableAutoBuild: true
      EnvironmentVariables:
        - Name: NUXT_HTTP_API_INVOKE_URL
          Value: 
            Fn::ImportValue: !Sub ${BackEndName}-http-api-invoke-url
        - Name: NUXT_PUBLIC_USER_POOL_ID
          Value: 
            Fn::ImportValue: !Sub ${BackEndName}-user-pool-id
        - Name: NUXT_PUBLIC_USER_POOL_CLIENT_ID
          Value: 
            Fn::ImportValue: !Sub ${BackEndName}-user-pool-client-id
  # Amplify

  # CodePipeline
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${FrontEndName}-pipeline-${Environment}
      RoleArn:
        Fn::ImportValue: !Sub common-cloudformation-service-role-${AWS::Region}-arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              Configuration:
                RepositoryName:
                  Fn::ImportValue: !Sub ${FrontEndName}-repository-name
                BranchName: !If [IsProd, main, dev]
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: !Sub src-${Environment}
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Ref AWS::StackName
                RoleArn:
                  Fn::ImportValue: !Sub common-cloudformation-service-role-${AWS::Region}-arn
                TemplatePath: !Sub src-${Environment}::template.yaml
                ParameterOverrides: !Sub |
                  {
                    "FrontEndName": "${FrontEndName}",
                    "BackEndName": "${BackEndName}",
                    "Environment": "${Environment}"
                  }
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
              InputArtifacts:
                - Name: !Sub src-${Environment}
              RunOrder: 2
      PipelineType: V2
      ArtifactStore:
        Type: S3
        Location:
          Fn::ImportValue: !Sub ${FrontEndName}-artifact-store-name
  # CodePipeline

  # Events
  Rule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub ${FrontEndName}-rule-${Environment}
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - "CodeCommit Repository State Change"
        resources:
          - Fn::ImportValue: !Sub ${FrontEndName}-repository-arn
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - !If [IsProd, main, dev]
      Targets:
        - Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}
          RoleArn:
            Fn::ImportValue: !Sub common-cloudformation-service-role-${AWS::Region}-arn
          Id: !Sub ${Pipeline}-target
  # Events

Outputs:
  AppBranchDomainOutput:
    Value: !Sub
      - http://${BranchName}.${AppDefaultDomain}
      - BranchName: !GetAtt Branch.BranchName 
        AppDefaultDomain:
          Fn::ImportValue: !Sub ${FrontEndName}-app-default-domain
    Export:
      Name: !Sub ${FrontEndName}-app-branch-domain